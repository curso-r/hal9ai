[
  {
    "objectID": "examples.html",
    "href": "examples.html",
    "title": "Examples",
    "section": "",
    "text": "RPython\n\n\n\nlibrary(hal9)\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_bar_chart(x = \"cyl\",\n               y = \"carb\",\n               type = \"grouped\",\n               orientation = \"horizontal\",\n               palette = \"schemePaired\",\n               fontsize = \"14\",\n               tickrotation = \"0\",\n               marginleft = \"40\",\n               marginbottom = \"30\")\n\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\n\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_dot_chart(\n    x = \"carb\",\n    color = \"cyl\",\n    palette = \"schemePaired\",\n    dotsize = \"3\",\n    ticks = \"3\",\n    fontsize = \"16\",\n    marginleft = \"40\",\n    marginbottom = \"30\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\n\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_error_chart(\n    x = \"carb\",\n    min = \"mpg\",\n    max = \"mpg\",\n    open = \"vs\",\n    close = \"cyl\",\n    levels = \"carb\",\n    fontsize = \"16\",\n    marginleft = \"40\",\n    marginbottom = \"30\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\n\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_heatmap_chart(\n    x = \"mpg\",\n    y = \"disp\",\n    value = \"carb\",\n    palette = \"schemePaired\",\n    fontsize = \"16\",\n    marginleft = \"40\",\n    marginbottom = \"30\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\n\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_histogram_chart(x = \"mpg\",\n                     histfunc = \"count\",\n                     histnorm = \"none\",\n                     barmode = \"stack\",\n                     palette = \"schemePaired\")\n\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\n\n\nRPython\n\n\n\ntab_aux <- mtcars |> \n  dplyr::group_by(carb) |> \n  dplyr::summarise(media = mean(mpg))\n\nh9_create() |>\n  h9_load(tab_aux) |> \n  h9_line_chart(\n    x = \"carb\",\n    y = \"media\",\n    palette = \"schemePaired\",\n    fontsize = \"16\",\n    marginleft = \"40\",\n    marginbottom = \"30\"\n  )\n\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\n\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_sankey_chart(\n    source = \"carb\",\n    target = \"cyl\",\n    value = \"carb\",\n    palette = \"schemePaired\",\n    fontsize = \"16\",\n    marginleft = \"40\",\n    marginbottom = \"30\"\n  )\n\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\n\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_scatter_chart(\n    x = \"mpg\",\n    y = \"drat\",\n    color = \"cyl\",\n    size = \"carb\",\n    palette = \"schemePaired\",\n    fontsize = \"16\",\n    marginleft = \"40\",\n    marginbottom = \"30\"\n  )\n\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\n\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_treemap_chart(\n    label = \"mpg\",\n    size = \"hp\",\n    palette = \"schemePaired\",\n    fontsize = \"16\",\n    marginleft = \"30\",\n    marginbottom = \"40\"\n  )\n\n\n\n\n\"soon\""
  },
  {
    "objectID": "examples.html#visualizations",
    "href": "examples.html#visualizations",
    "title": "Examples",
    "section": "Visualizations",
    "text": "Visualizations\n\nFacets\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_facets_chart(\n    x = \"mpg\",\n    y = \"hp\",\n    facets = \"carb\",\n    color = \"cyl\",\n    chartType = \"dot\", \n    palette = \"schemePaired\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nFunnel\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_funnel_chart(\n    stage = \"mpg\",\n    value = \"hp\",\n    label = \"cyl\",\n    fontSize = \"16\",\n    showPercentSelection = \"true\",\n    funnelType = \"2d\",\n    palette = \"schemePaired\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nNetwork\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_network_chart(\n    from = \"cyl\",\n    to = \"carb\" \n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nPlotly\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_plotly_chart(\n    x = \"mpg\",\n    y = \"hp\",\n    chartType = \"scatter\", \n    dataSizes = \"5\", \n    palette = \"schemePaired\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nRadial\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_radial_chart(\n    x = \"mpg\",\n    y = \"hp\",\n    wafflesizelabel = \"250\",\n    palette = \"schemePaired\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nRegression\n\nRPython\n\n\n\ntab_aux <- mtcars |> \n  dplyr::group_by(carb) |> \n  dplyr::summarise(media = mean(mpg))\n\nh9_create() |>\n  h9_load(tab_aux) |> \n  h9_regression_chart(\n    x = \"carb\",\n    y = \"media\",\n    type = \"exponential\", \n    predictions = \"0\"\n  )\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nWaffle\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_waffle_chart(\n    x = \"mpg\",\n    y = \"hp\",\n    wafflesizelabel = \"250\", \n    palette = \"schemePaired\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nWaterfall\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_waterfall_chart(\n    x = \"mpg\",\n    y = \"carb\",\n    fontsize = \"16\", \n    marginleft = \"40\", \n    marginbottom = \"30\"\n  )\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nWordcloud\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |> \n  h9_wordcloud_chart(\n    label = \"_row\",\n    size = \"cyl\"\n  )\n\n\n\n\n\"soon\""
  },
  {
    "objectID": "examples.html#transforms",
    "href": "examples.html#transforms",
    "title": "Examples",
    "section": "Transforms",
    "text": "Transforms\n\nAssign\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_assign(column = \"new_column\", \n            array = \"data.indices()\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nDerive\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_derive(column = \"new_column\",\n            expression = \"data[columns[1]]\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nDrop\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_drop(columns = \"mpg\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nFilter\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_filter(field = \"mpg\",\n            expression = \"field > 20\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nFold\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_fold(gather = \"_row\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nImpute\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(airquality) |>\n  h9_impute(field = \"Ozone\",\n            method = \"mean\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nRolling Sum\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_roll_sum(column = \"mpg\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nSample\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_sample(samplesize = \"40\",\n            withReplacement = \"false\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nSelect\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_select(columns = \"am\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nSlice\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_slice(start = \"5\",\n           end = \"20\")\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nSort\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_sort(field = \"mpg\",\n          order = \"desc\")\n\n\n\n\n\n\n\n\n\"soon\"\n\n\n\n\n\n\nSummarize\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(mtcars) |>\n  h9_summarize(group = \"cyl\",\n               field = \"carb\",\n               summarizer = \"mean\")\n\n\n\n\n\n\n\n\n\"soon\""
  },
  {
    "objectID": "getstarted.html",
    "href": "getstarted.html",
    "title": "Get Started",
    "section": "",
    "text": "RPython\n\n\n\ndevtools::install_github(\"hal9ai/hal9ai\", subdir = \"r\")\n\n\n\n\n\"soon\""
  },
  {
    "objectID": "getstarted.html#create-a-pipeline",
    "href": "getstarted.html#create-a-pipeline",
    "title": "Get Started",
    "section": "Create a pipeline",
    "text": "Create a pipeline\nPipelines are a sequence of operations that allows you to import, transform, visualize and model your data in a single web app.\n\nRPython\n\n\nUsing the hal9 package, you can create a hal9 pipeline as follow:\n\nlibrary(hal9)\n\nh9_create() |>\n  h9_load(dataset = mtcars) |>\n  h9_scatter_chart(x = \"cyl\", y = \"disp\")\n\n\n\n\n\n\n\n\nh9_create() creates a h9 object. All hal9 pipelines will start with this function.\nh9_load() s used to import an R dataset into hal9. This dataset will be used throughout the entire pipeline.\nh9_scatter_chart() adds a scatter chart to the pipeline.\n\n\n\n\n\"soon\""
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "hal9: Interactive Data Apps without Web Dev",
    "section": "",
    "text": "Hal9 helps you build web applications with not web development background to build rich web applications from Python and R. This project is under development in Hal9â€™s GitHub repo."
  },
  {
    "objectID": "index.html#easy-to-use",
    "href": "index.html#easy-to-use",
    "title": "hal9: Interactive Data Apps without Web Dev",
    "section": "Easy to Use",
    "text": "Easy to Use\n\nRPython\n\n\n\ndevtools::install_github(\"hal9ai/hal9ai\", subdir = \"r\")\n\n\nlibrary(hal9)\n\nh9_create() |>\n  h9_load(iris) |>\n  h9_dropdown(values = \"versicolor,setosa,virginica\") |>\n  h9_filter(field = \"Species\", expression = \"field == outputs.dropdown\") |>\n  h9_scatter_chart(x = \"Sepal.Length\", y = \"Sepal.Width\", color = \"Species\")\n\n\n\n\n!pip3 install --upgrade --force-reinstall git+https://github.com/hal9ai/hal9ai.git#subdirectory=python\n\n\nimport hal9 as h9\n\nh9.create()\n  .load(iris)\n  .dropdown(values = \"versicolor,setosa,virginica\")\n  .filter(field = \"Species\", expression = \"field == outputs.dropdown\")\n  .scatter_chart(x = \"Sepal.Length\", y = \"Sepal.Width\", color = \"Species\")"
  },
  {
    "objectID": "index.html#interactive",
    "href": "index.html#interactive",
    "title": "hal9: Interactive Data Apps without Web Dev",
    "section": "Interactive",
    "text": "Interactive\n\nRPython\n\n\n\nh9_create() |>\n  h9_load(dataset = iris) |>\n  h9_slider(min = \"1\", max = \"100\", step = \"1\") |>\n  h9_sample() |>\n  h9_scatter_chart(x = \"Sepal.Length\", y = \"Sepal.Width\", color = \"Species\")\n\n\n\n\nh9.create()\n  .load(dataset = iris)\n  .slider(min = \"1\", max = \"100\", step = \"1\")\n  .sample()\n  .scatter_chart(x = \"Sepal.Length\", y = \"Sepal.Width\", color = \"Species\")"
  }
]